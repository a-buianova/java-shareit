-- USERS
CREATE TABLE IF NOT EXISTS users (
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS item_requests (
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  TEXT      NOT NULL,
    requester_id BIGINT    NOT NULL,
    created      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_request_user
        FOREIGN KEY (requester_id)
        REFERENCES users(id)
        ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_item_requests_requester ON item_requests(requester_id);
CREATE INDEX IF NOT EXISTS idx_item_requests_created   ON item_requests(created);

-- ITEMS
CREATE TABLE IF NOT EXISTS items (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(255) NOT NULL,
    description TEXT         NOT NULL,
    available   BOOLEAN      NOT NULL,
    owner_id    BIGINT       NOT NULL,
    request_id  BIGINT,
    CONSTRAINT fk_item_owner
        FOREIGN KEY (owner_id)
        REFERENCES users(id)
        ON DELETE CASCADE,
    CONSTRAINT fk_item_request
        FOREIGN KEY (request_id)
        REFERENCES item_requests(id)
        ON DELETE SET NULL
);

CREATE INDEX IF NOT EXISTS idx_items_owner ON items(owner_id);

-- BOOKINGS
CREATE TABLE IF NOT EXISTS bookings (
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_ts  TIMESTAMP   NOT NULL,
    end_ts    TIMESTAMP   NOT NULL,
    item_id   BIGINT      NOT NULL,
    booker_id BIGINT      NOT NULL,
    status    VARCHAR(20) NOT NULL,
    CONSTRAINT fk_booking_item
        FOREIGN KEY (item_id)
        REFERENCES items(id)
        ON DELETE CASCADE,
    CONSTRAINT fk_booking_booker
        FOREIGN KEY (booker_id)
        REFERENCES users(id)
        ON DELETE CASCADE,
    CONSTRAINT chk_booking_time CHECK (end_ts > start_ts)
);

CREATE INDEX IF NOT EXISTS idx_bookings_item                    ON bookings(item_id);
CREATE INDEX IF NOT EXISTS idx_bookings_booker                  ON bookings(booker_id);
CREATE INDEX IF NOT EXISTS idx_bookings_item_start              ON bookings(item_id, start_ts);
CREATE INDEX IF NOT EXISTS idx_bookings_booker_status_start     ON bookings(booker_id, status, start_ts);
CREATE INDEX IF NOT EXISTS idx_bookings_item_status_start       ON bookings(item_id,   status, start_ts);

-- COMMENTS
CREATE TABLE IF NOT EXISTS comments (
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      TEXT      NOT NULL,
    item_id   BIGINT    NOT NULL,
    author_id BIGINT    NOT NULL,
    created   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_comment_item
        FOREIGN KEY (item_id)
        REFERENCES items(id)
        ON DELETE CASCADE,
    CONSTRAINT fk_comment_author
        FOREIGN KEY (author_id)
        REFERENCES users(id)
        ON DELETE CASCADE,
    CONSTRAINT chk_comment_text_len        CHECK (CHAR_LENGTH(text) <= 1000),
    CONSTRAINT chk_comment_text_not_blank  CHECK (TRIM(text) <> '')
);

CREATE INDEX IF NOT EXISTS idx_comments_item    ON comments(item_id);
CREATE INDEX IF NOT EXISTS idx_comments_author  ON comments(author_id);
CREATE INDEX IF NOT EXISTS idx_comments_created ON comments(created);